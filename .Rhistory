#' @usage data(BB.250)
#' @format A list with two elements: 'Dataset' and 'Folds'.
"BB.250"
?BB.250
data(BB.250)
data(BB.250)
training_data_BB.250 <- BB.250$Dataset[folds != 1,]
training_data_BB.250 <- BB.250$Dataset[BB.250$Folds != 1,]
training_data_BB.250
?BB.250
?BB.250
roxygenize()
devtools::install()
library(LimeSoDa)
?BB.250
?BB.250
?BB.250
roxygenize()
?BB.250
# install.packages(c("devtools", "usethis", "roxygen2"))
library(devtools)
library(usethis)
library(roxygen2)
BB_72_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_72_data_table.rds")
folds_BB_72_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_72_data_table.rds")
BB.72 <- list("Dataset" = BB_72_data_table.rds, "Folds" = folds_BB_72_data_table.rds)
usethis::use_data(BB.72)
usethis::use_r("data")
RP_62_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/RP_62_data_table.rds")
folds_RP_62_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_RP_62_data_table.rds")
BB.72 <- list("Dataset" = RP_62_data_table.rds, "Folds" = folds_RP_62_data_table.rds)
usethis::use_data(BB.72)
usethis::use_r("data")
# install.packages(c("devtools", "usethis", "roxygen2"))
library(devtools)
library(usethis)
library(roxygen2)
#
BB_250_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_250_data_table.rds")
folds_BB_250_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_250_data_table.rds")
BB.250 <- list("Dataset" = BB_250_data_table.rds, "Folds" = folds_BB_250_data_table.rds)
usethis::use_data(BB.250)
usethis::use_r("data")
#' # Access the folds
#' RP.62$Folds
#'
#' # How to split the dataset into training and testing folds for the example of the first fold
#' training_data_RP.62 <- RP.62$Dataset[RP.62$Folds != 1,]
#' testing_data_RP.62 <- RP.62$Dataset[RP.62$Folds == 1,]
#'
#' @usage data(RP.62)
#' @format A list with two elements: 'Dataset' and 'Folds'.
#' @docType data
"RP.62"
BB_72_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_72_data_table.rds")
folds_BB_72_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_72_data_table.rds")
BB.72 <- list("Dataset" = BB_72_data_table.rds, "Folds" = folds_BB_72_data_table.rds)
usethis::use_data(BB.72)
usethis::use_r("data")
#
BB_250_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_250_data_table.rds")
folds_BB_250_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_250_data_table.rds")
BB.250 <- list("Dataset" = BB_250_data_table.rds, "Folds" = folds_BB_250_data_table.rds)
usethis::use_data(BB.250)
usethis::use_data(BB.250)
usethis::use_data(BB.250,overwrite = TRUE)
usethis::use_r("data")
BB_72_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_72_data_table.rds")
folds_BB_72_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_72_data_table.rds")
BB.72 <- list("Dataset" = BB_72_data_table.rds, "Folds" = folds_BB_72_data_table.rds)
usethis::use_data(BB.72,overwrite = TRUE)
usethis::use_r("data")
RP_62_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/RP_62_data_table.rds")
folds_RP_62_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_RP_62_data_table.rds")
RP.62 <- list("Dataset" = RP_62_data_table.rds, "Folds" = folds_RP_62_data_table.rds)
usethis::use_data(RP.62,overwrite = TRUE)
roxygenize()
BB.250
RP.62
?RP.62
devtools::install()
detach("package:LimeSoDa", unload = TRUE)
library(LimeSoDa)
browseVignettes("tidyr")
usethis::use_vignette("LimeSoda vignette")
usethis::use_vignette("LimeSoDa_vignette")
detach("package:LimeSoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
head(BB.250)
library(LimeSoDa)
head(BB.250$Dataset)
table(vector)
vector <- c(1,1,2,3,1,2,1,3,2)
table(vector)
?BB.250
BB.250$Dataset
BB.250$Dataset[-c(2:3)]
BB.250_dataset_predict.SOC <- BB.250$Dataset[-c(2:3)] # In this example, only SOC is predicted. Hence, Clay_target and pH_target
BB.250$Dataset
BB.250$Dataset
BB.250_dataset_predict.SOC <- BB.250$Dataset[-c(2:3)] # In this example, only SOC is predicted. Hence, Clay_target and pH_target
predicted_values <- c() # Store predicted values in this vector
test_values <- c() # Store testing fold values in this vector
for (i in 1:10){
training_data <- BB.250_dataset_predict.SOC[folds != i,]
test_data <- BB.250_dataset_predict.SOC[folds == i,]
MLR_model <- lm("SOM_target~ .")), data = training_data)
BB.250$Dataset
BB.250_dataset_predict.SOC <- BB.250$Dataset[-c(2:3)] # In this example, only SOC is predicted. Hence, Clay_target and pH_target
predicted_values <- c() # Store predicted values in this vector
test_values <- c() # Store testing fold values in this vector
for (i in 1:10){
training_data <- BB.250_dataset_predict.SOC[folds != i,]
test_data <- BB.250_dataset_predict.SOC[folds == i,]
MLR_model <- lm("SOM_target ~ ."), data = training_data)
BB.250$Dataset
BB.250_dataset_predict.SOC <- BB.250$Dataset[-c(2:3)] # In this example, only SOC is predicted. Hence, Clay_target and pH_target
predicted_values <- c() # Store predicted values in this vector
test_values <- c() # Store testing fold values in this vector
for (i in 1:10){
training_data <- BB.250_dataset_predict.SOC[folds != i,]
test_data <- BB.250_dataset_predict.SOC[folds == i,]
MLR_model <- lm("SOM_target ~ .", data = training_data)
MLR_model_predictions <- predict(MLR_model, test_data)
predicted_values <- c(predicted_values, MLR_model_predictions)
test_values <- c(test_values, test_data$SOM_target)
}
BB.250$Dataset
BB.250_dataset_predict.SOC <- BB.250$Dataset[-c(2:3)] # In this example, only SOC is predicted. Hence, Clay_target and pH_target
predicted_values <- c() # Store predicted values in this vector
test_values <- c() # Store testing fold values in this vector
for (i in 1:10){
training_data <- BB.250_dataset_predict.SOC[BB.250$Folds != i,]
test_data <- BB.250_dataset_predict.SOC[BB.250$Folds == i,]
MLR_model <- lm("SOM_target ~ .", data = training_data)
MLR_model_predictions <- predict(MLR_model, test_data)
predicted_values <- c(predicted_values, MLR_model_predictions)
test_values <- c(test_values, test_data$SOM_target)
}
for (i in 1:10){
training_data <- BB.250_dataset_predict.SOC[BB.250$Folds != i,]
test_data <- BB.250_dataset_predict.SOC[BB.250$Folds == i,]
MLR_model <- lm("SOM_target ~ .", data = training_data)
MLR_model_predictions <- predict(MLR_model, test_data)
predicted_values <- c(predicted_values, MLR_model_predictions)
test_values <- c(test_values, test_data$SOM_target)
}
BB.250$Dataset
BB.250_dataset_predict.SOC <- BB.250$Dataset[-c(2:3)] # In this example, only SOC is predicted. Hence, Clay_target and pH_target
predicted_values <- c() # Store predicted values in this vector
test_values <- c() # Store testing fold values in this vector
for (i in 1:10){
training_data <- BB.250_dataset_predict.SOC[BB.250$Folds != i,]
test_data <- BB.250_dataset_predict.SOC[BB.250$Folds == i,]
MLR_model <- lm("SOM_target ~ .", data = training_data)
MLR_model_predictions <- predict(MLR_model, test_data)
predicted_values <- c(predicted_values, MLR_model_predictions)
test_values <- c(test_values, test_data$SOM_target)
}
# Get R2
predicted_values
test_data
predicted_values <- c() # Store predicted values in this vector
testing_values <- c() # Store testinging fold values in this vector
for (i in 1:10){
training_data <- BB.250_dataset_predict.SOC[BB.250$Folds != i,]
testing_data <- BB.250_dataset_predict.SOC[BB.250$Folds == i,]
MLR_model <- lm("SOM_target ~ .", data = training_data)
MLR_model_predictions <- predict(MLR_model, testing_data)
predicted_values <- c(predicted_values, MLR_model_predictions)
testing_values <- c(testing_values, testing_data$SOM_target)
}
# Get R2
predicted_values
testing_values
# R2
1 - sum((predicted_values - testing_values)^2) / sum((testing_values - mean(testing_values))^2)
# R2
1 - sum((predicted_values - testing_values)^2) / sum((testing_values - mean(testing_values))^2)
# RMSE
sqrt(mean((predicted_values - testing_values)^2))
ggplot()
detach("package:LimeSoDa", unload = TRUE)
BB.250_dataset_predict.SOC <- BB.250$Dataset[-c(2:3)] # In this example, only SOC is predicted. Hence, Clay_target and pH_target
library(LimeSoDa)
BB.250_dataset_predict.SOC <- BB.250$Dataset[-c(2:3)] # In this example, only SOC is predicted. Hence, Clay_target and pH_target
predicted_values <- c() # Store predicted values in this vector
testing_values <- c() # Store testinging fold values in this vector
for (i in 1:10){
training_data <- BB.250_dataset_predict.SOC[BB.250$Folds != i,] # Exclude testing fold from training data
testing_data <- BB.250_dataset_predict.SOC[BB.250$Folds == i,] # Define testing fold as testing data
MLR_model <- lm("SOM_target ~ .", data = training_data) # Fit MLR to predict SOC
MLR_model_predictions <- predict(MLR_model, testing_data) # Predict values of testing fold
predicted_values <- c(predicted_values, MLR_model_predictions) # Store predicted values for testing fold
testing_values <- c(testing_values, testing_data$SOM_target) # Store real observed values from testing fold
}
# R2
1 - sum((predicted_values - testing_values)^2) / sum((testing_values - mean(testing_values))^2)
# RMSE
sqrt(mean((predicted_values - testing_values)^2))
detach("package:LimeSoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(sf)
library(sp)
library(raster)
library(gstat)
library(data.table)
library(automap)
library(dplyr)
# Load Reference Samples and make them spatial data
BB_250_Ref <- read.csv(file = "BB_250/BB_250_Ref.csv",
header = T,sep = ",",dec = ".")
ER_Krig <- krige(ER~1, BB_250_ER_Gamma_raw_subset.sp, BB_250_Ref.sp,  ER_variogram$var_model, nmax = 100)
Gamma_variogram <- autofitVariogram(G_Total_Counts~1, BB_250_ER_Gamma_raw_subset.sp)
plot(Gamma_variogram, pch=19, col="black") #Note: Distance should ideally be set wider but since autofitVariogram does not give control over this, we ignore this.
Gamma_Krig <- krige(G_Total_Counts~1, BB_250_ER_Gamma_raw_subset.sp, BB_250_Ref.sp,  Gamma_variogram$var_model, nmax = 100)
pH_ISE_variogram <- autofitVariogram(pH_ISE~1, BB_250_pH_ISE_subset.sp)
plot(pH_ISE_variogram, pch=19, col="black")
pH_ISE_Krig <- krige(pH_ISE~1, BB_250_pH_ISE_subset.sp, BB_250_Ref.sp,  pH_ISE_variogram$var_model, nmax = 100)
#Extract DEM Raster
BB_250_Elevation_Raster <- raster("BB_250/Features/DEM_BB/DGM_462905-5804420.tif")
help(terrain)
BB_250_Terrain_Raster <- terrain(BB_250_Elevation_Raster, opt=c("slope", "TPI", "TRI", "roughness", "flowdir"), unit="degrees", neighbors=8)
colnames(BB_250_Terrain_Raster.ref_extract)<-c("Slope", "TPI", "TRI", "Roughness", "Flowdir")
BB_250_Elevation_Raster.ref_extract <- as.data.frame(extract(BB_250_Elevation_Raster, BB_250_Ref.sp))
colnames(BB_250_Elevation_Raster.ref_extract) <-"Altitude"
#Extract Sentinel Raster
BB_250_Sentinel_Raster <- list.files("BB_250/Features/RSS_Sentinel.2/", pattern = ".tif", full.names = TRUE)
BB_250_Sentinel_Sets <- list()
BB_250_Sentinel_Sets
for (BB_250_Sentinel_Raster in BB_250_Sentinel_Raster) {
BB_250_Sentinel_Sets[[length(BB_250_Sentinel_Sets) + 1]] <- raster(BB_250_Sentinel_Raster)
}
BB_250_Extracted_Sentinel_Values <- list()
for (i in BB_250_Sentinel_Sets) {
BB_250_Extracted_Sentinel_Values[[length(BB_250_Extracted_Sentinel_Values) + 1]] <- extract(i, BB_250_Ref.sp)
}
BB_250_Extracted_Sentinel_Values <- data.frame(do.call(cbind, BB_250_Extracted_Sentinel_Values))
BB_250_Extracted_Sentinel_Values
Sentinel_names<- c( "B02", "B03", "B04", "B05", "B06", "B07", "B08","B11",
"B12", "B8A")
colnames(BB_250_Extracted_Sentinel_Values) <- Sentinel_names
ER_Gamma_pH_ISE.df <- data.frame("ER"= ER_Krig$var1.pred, "γ_Total_Counts"= Gamma_Krig$var1.pred, "pH_ISE"= pH_ISE_Krig$var1.pred)
BB_250_data_table <- cbind(BB_250_Ref[1:3], ER_Gamma_pH_ISE.df, BB_250_Terrain_Raster.ref_extract[c("Slope","TPI")], BB_250_Elevation_Raster.ref_extract, BB_250_Extracted_Sentinel_Values)
saveRDS(object = BB_250_data_table,file = "R_script/Stored_dataset_files/BB_250_data_table.rds")
saveRDS(object = BB_250_Ref[4:5],file = "R_script/Stored_dataset_coordinate_files/BB_250_coordinates.rds")
BB_250_data_table_without_coord <- readRDS(file = "R_script/Stored_dataset_files/BB_250_data_table.rds")
BB_250_data_table_without_coord
library(corrplot)
cor(BB_250_data_table)
# now plot
corrplot(cor(BB_250_data_table_without_coord), method="number")
library(devtools)
library(usethis)
library(roxygen2)
BB_250_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_250_data_table.rds")
folds_BB_250_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_250_data_table.rds")
BB_250_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/BB_250_coordinates.rds")
BB.250 <- list("Dataset" = BB_250_data_table.rds, "Folds" = folds_BB_250_data_table.rds, "Coordinates" = BB_250_coordinates.rds)
usethis::use_data(BB.250,overwrite = TRUE)
usethis::use_r("data")
BB_250_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_250_data_table.rds")
folds_BB_250_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_250_data_table.rds")
BB_250_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/BB_250_coordinates.rds")
BB.250 <- list("Dataset" = BB_250_data_table.rds, "Folds" = folds_BB_250_data_table.rds, "Coordinates" = BB_250_coordinates.rds)
usethis::use_data(BB.250,overwrite = TRUE)
usethis::use_r("data")
#
roxygenize()+
roxygenize()
roxygenize()
roxygenise()
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
BB.250$Coordinates
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
BB_72_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_72_data_table.rds")
folds_BB_72_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_72_data_table.rds")
BB_72_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/BB_72_coordinates.rds")
BB.72 <- list("Dataset" = BB_72_data_table.rds, "Folds" = folds_BB_72_data_table.rds, "Coordinates" = BB_72_coordinates.rds)
usethis::use_data(BB.72,overwrite = TRUE)
usethis::use_r("data")
RP_62_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/RP_62_data_table.rds")
folds_RP_62_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_RP_62_data_table.rds")
RP_62_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/RP_62_coordinates.rds")#
RP.62 <- list("Dataset" = RP_62_data_table.rds, "Folds" = folds_RP_62_data_table.rds, "Coordinates"= RP_62_coordinates.rds)
usethis::use_data(RP.62,overwrite = TRUE)
usethis::use_r("data")
BB_30_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_30_data_table.rds")
folds_BB_30_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_30_data_table.rds")
BB_30_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/BB_30_coordinates.rds")
BB.30 <- list("Dataset" = BB_30_data_table.rds, "Folds" = folds_BB_30_data_table.rds, "Coordinates" = BB_30_coordinates.rds)
usethis::use_data(BB.30,overwrite = TRUE)
usethis::use_r("data")
RP_62_coordinates.rds
BB_30_coordinates.rds
roxygenize()
library(devtools)
library(usethis)
library(roxygen2)
roxygenize()
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
?BB.30
library(LimeSoDa)
?BB.30
SP_58_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/SP_58_data_table.rds")
folds_SP_58_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_SP_58_data_table.rds")
SP_58_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/SP_58_coordinates.rds")
SP.58 <- list("Dataset" = SP_58_data_table.rds, "Folds" = folds_SP_58_data_table.rds, "Coordinates" = SP_58_coordinates.rds)
usethis::use_data(SP.58,overwrite = TRUE)
usethis::use_r("data")
SP.58
ncol(SP.58$Dataset)-3
head(SP.58$Coordinates)
MG_44_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/MG_44_data_table.rds")
folds_MG_44_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_MG_44_data_table.rds")
MG_44_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/MG_44_coordinates.rds")
MG.44 <- list("Dataset" = MG_44_data_table.rds, "Folds" = folds_MG_44_data_table.rds, "Coordinates" = MG_44_coordinates.rds)
usethis::use_data(MG.44,overwrite = TRUE)
usethis::use_r("data")
roxygenize()
roxygenize
roxygenize()
library(roxygen2)
roxygenize()
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
NSW_52_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/NSW_52_data_table.rds")
folds_NSW_52_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_NSW_52_data_table.rds")
NSW_52_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/NSW_52_coordinates.rds")
NSW.52 <- list("Dataset" = NSW_52_data_table.rds, "Folds" = folds_NSW_52_data_table.rds, "Coordinates" = NSW_52_coordinates.rds)
usethis::use_data(NSW.52,overwrite = TRUE)
usethis::use_r("data")
NSW_52
data("NSW.52")
NSW_52
library("LimeSoDa")
NSW_52
NSW.52
roxygenize()
library(roxygen2)
roxygenize()
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/LimeSoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
?NSW.53
?NSW.52
?NSW.52
library(LimeSoDa)
?NSW.52
View(BB_30_data_table.rds)
library(devtools)
library(usethis)
library(roxygen2)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(Lime.SoDa)
?BB.30
detach("package:Lime.SoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(Lime.SoDa)
citation(Lime.SoDa)
citation("Lime.SoDa")
detach("package:Lime.SoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(Lime.SoDa)
citation(Lime.SoDa)
citation("Lime.SoDa")
usethis::use_citation()
roxygenize()
citation(Lime.SoDa)
citation("Lime.SoDa")
library(Lime.SoDa)
citation(Lime.SoDa)
detach("package:Lime.SoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(Lime.SoDa)
citation(Lime.SoDa)
citation("Lime.SoDa")
citation("Lime.SoDa")
citation(Lime.SoDa)
citation("Lime.SoDa")
citation("Lime.SoDa")
citation("Lime.SoDa")
citation("Lime.SoDa")
citation("Lime.SoDa")
detach("package:Lime.SoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(Lime.SoDa)
citation("Lime.SoDa")
usethis::use_release_issue()
check()
check()
check
check()
check()
check()
check()
check()
check()
check()
usethis::use_readme_md()
usethis::use_release_issue()
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
?BB.250
library("Lime.SoDa")
?BB.250
?BB.250
?BB.250
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
detach("package:Lime.SoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(Lime.SoDa)
?BB.250
library("Lime.SoDa")
?BB.250
usethis::use_news_md()
usethis::use_cran_comments()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check(remote = TRUE, manual = TRUE)
devtools::check(remote = TRUE, manual = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
devtools::check(remote = TRUE, manual = TRUE)
usethis::use_git_config(user.name = "JonasSchmidinger", user.email = "Jonas.Schmidinger@uni-osnabrueck.de")
devtools::check(remote = TRUE, manual = TRUE)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
usethis::use_test()
usethis::use_test()
usethis::use_test()
usethis::use_test()
usethis::use_test()
usethis::use_test()
devtools::test_coverage()
devtools::run_examples()
devtools::document()
revdepcheck::revdep_check()
install.packages("revdepcheck")
library("revdepcheck")
tools::dependsOnPkgs()
devtools::revdep_check()
tools::dependsOnPkgs()
tools::dependsOnPkgs(pkgs = "Lime.SoDa")
devtools::check_win_release()
check_for_cran()
validate_email()
check_on_linux()
install.packages("rhub")
library("rhub")
validate_email()
check_for_cran()
install.packages("rhubv2")
rhub::rhub_setup()
rhub::rc_*()
devtools::check()
library(devtools)
library(usethis)
library(roxygen2)
BB_250_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_250_data_table.rds")
folds_BB_250_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_250_data_table.rds")
BB_250_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/BB_250_coordinates.rds")
BB.250 <- list("Dataset" = BB_250_data_table.rds, "Folds" = folds_BB_250_data_table.rds, "Coordinates" = BB_250_coordinates.rds)
usethis::use_data(BB.250,overwrite = TRUE)
usethis::use_r("data")
BB_72_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_72_data_table.rds")
folds_BB_72_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_72_data_table.rds")
BB_72_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/BB_72_coordinates.rds")
BB.72 <- list("Dataset" = BB_72_data_table.rds, "Folds" = folds_BB_72_data_table.rds, "Coordinates" = BB_72_coordinates.rds)
usethis::use_data(BB.72,overwrite = TRUE)
usethis::use_r("data")
RP_62_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/RP_62_data_table.rds")
folds_RP_62_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_RP_62_data_table.rds")
RP_62_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/RP_62_coordinates.rds")#
RP.62 <- list("Dataset" = RP_62_data_table.rds, "Folds" = folds_RP_62_data_table.rds, "Coordinates"= RP_62_coordinates.rds)
usethis::use_data(RP.62,overwrite = TRUE)
usethis::use_r("data")
BB_30_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/BB_30_data_table.rds")
folds_BB_30_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/folds_BB_30_data_table.rds")
BB_30_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/BB_30_coordinates.rds")
BB.30 <- list("Dataset" = BB_30_data_table.rds, "Folds" = folds_BB_30_data_table.rds, "Coordinates" = BB_30_coordinates.rds)
usethis::use_data(BB.30,overwrite = TRUE)
usethis::use_r("data")
document()
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
devtools::check()
devtools::check()
devtools::check_win_release()
document()
pkgload::dev_help('BB.250')
document()
document()
pkgload::dev_help('BB.250')
library(roxygen2)
document()
pkgload::dev_help('BB.250')
check()
devtools::check_win_release()
library("devtools")
library("roxygen2")
check()
cd "C:\Users\Jonas\Desktop\Benchmark_datasets\Lime.SoDa_R_Package"
cd "C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package"
cd "C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package"
