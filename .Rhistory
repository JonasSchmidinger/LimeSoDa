scale_x_reverse()
mir_data <- O.32$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
nir_data <- SP.231$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
nir_data <- SSP.460$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
nir_data <- SA.112$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
nir_data <- SL.125$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
nir_data <- UL.120$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
nir_data <- CV.98$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
CV.98_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/CV.98_data_table.rds")
CV.98_data_table.rds
folds_CV.98_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/CV.98_folds.rds")
# CV.98_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/CV.98_coordinates.rds")
# CV.98_coordinates.rds
CV.98_coordinates.rds <- NA
# # #
CV.98 <- list("Dataset" = CV.98_data_table.rds, "Folds" = folds_CV.98_data_table.rds, "Coordinates" = CV.98_coordinates.rds)
usethis::use_data(CV.98,overwrite = TRUE)
usethis::use_r("data")
#Convert the row to a long format for ggplot2
library(ggplot2)
library(tidyverse)
nir_data <- SC.93$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
nir_data <- CV.98$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
nir_data <- NRW.62$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
nir_data <- RP.62$Dataset
nir_data <- RP.62$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
nir_data <- SSP.58$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
nir_data <- MG.44$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
?BB.30_2
document()
library(Lime.SoDa)
detach("package:Lime.SoDa", unload = TRUE)
Overview_Datasets <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/Overview_table.rds")
usethis::use_data(Overview_Datasets,overwrite = TRUE)
usethis::use_r("data")
document()
library(devtools)
library(usethis)
library(roxygen2)
library(Lime.SoDa)
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
devtools::document()
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
devtools::document()
detach("package:Lime.SoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
devtools::document()
document()
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
#devtools::document()
library(devtools)
library(usethis)
library(roxygen2)
library(Lime.SoDa)
G.150_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/G.150_data_table.rds")
G.150_data_table.rds
folds_G.150_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/G.150_folds.rds")
G.150_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/G.150_coordinates.rds")
G.150_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/G.150_coordinates.rds")
# # #
G.150 <- list("Dataset" = G.150_data_table.rds, "Folds" = folds_G.150_data_table.rds, "Coordinates" = G.150_coordinates.rds)
usethis::use_data(G.150,overwrite = TRUE)
usethis::use_r("data")
MG.112_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/MG.112_data_table.rds")
MG.112_data_table.rds
folds_MG.112_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/MG.112_folds.rds")
MG.112_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/MG.112_coordinates.rds")
G.150_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/G.150_data_table.rds")
G.150_data_table.rds
folds_G.150_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/G.150_folds.rds")
G.150_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/G.150_coordinates.rds")
# # #
G.150 <- list("Dataset" = G.150_data_table.rds, "Folds" = folds_G.150_data_table.rds, "Coordinates" = G.150_coordinates.rds)
usethis::use_data(G.150,overwrite = TRUE)
usethis::use_r("data")
MG.112_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/MG.112_data_table.rds")
MG.112_data_table.rds
folds_MG.112_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/MG.112_folds.rds")
MG.112_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/MG.112_coordinates.rds")
# # #
MG.112 <- list("Dataset" = MG.112_data_table.rds, "Folds" = folds_MG.112_data_table.rds, "Coordinates" = MG.112_coordinates.rds)
usethis::use_data(MG.112,overwrite = TRUE)
usethis::use_r("data")
MG.112_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/MG.112_data_table.rds")
MG.112_data_table.rds
folds_MG.112_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/MG.112_folds.rds")
MG.112_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/MG.112_coordinates.rds")
# # #
MG.112 <- list("Dataset" = MG.112_data_table.rds, "Folds" = folds_MG.112_data_table.rds, "Coordinates" = MG.112_coordinates.rds)
usethis::use_data(MG.112,overwrite = TRUE)
usethis::use_r("data")
Overview_Datasets <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/Overview_table.rds")
usethis::use_data(Overview_Datasets,overwrite = TRUE)
usethis::use_r("data")
?H.138
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
#devtools::document()
library(devtools)
library(usethis)
library(roxygen2)
document()
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
#devtools::document()
library(devtools)
library(usethis)
library(roxygen2)
library(LimeSoDa)
# MG.112_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/MG.112_data_table.rds")
# MG.112_data_table.rds
# folds_MG.112_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/MG.112_folds.rds")
# MG.112_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/MG.112_coordinates.rds")
#
# # # #
# MG.112 <- list("Dataset" = MG.112_data_table.rds, "Folds" = folds_MG.112_data_table.rds, "Coordinates" = MG.112_coordinates.rds)
# usethis::use_data(MG.112,overwrite = TRUE)
# usethis::use_r("data")
#
Overview_Datasets <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/Overview_table.rds")
usethis::use_data(Overview_Datasets,overwrite = TRUE)
usethis::use_r("data")
document()
library(Lime.SoDa)
SSP.460
SSP.460_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/SSP.460_data_table.rds")
SSP.460_data_table.rds
folds_SSP.460_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/SSP.460_folds.rds")
SSP.460_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/SSP.460_coordinates.rds")
# # #
SSP.460 <- list("Dataset" = SSP.460_data_table.rds, "Folds" = folds_SSP.460_data_table.rds, "Coordinates" = SSP.460_coordinates.rds)
SSP.460_coordinates.rds <- NA
# # #
SSP.460 <- list("Dataset" = SSP.460_data_table.rds, "Folds" = folds_SSP.460_data_table.rds, "Coordinates" = SSP.460_coordinates.rds)
usethis::use_data(SSP.460,overwrite = TRUE)
usethis::use_r("data")
detach("package:Lime.SoDa", unload = TRUE)
library(Lime.SoDa)
detach("package:Lime.SoDa", unload = TRUE)
library(Lime.SoDa)
SSP.460
SSP.460
detach("package:Lime.SoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
nrow(SSP.460_data_table.rds)
ncol(SSP.460_data_table.rds)
library(LimeSoDa)
Overview_Datasets
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
#devtools::document()
library(devtools)
library(usethis)
library(roxygen2)
library(LimeSoDa)
# SSP.460_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/SSP.460_data_table.rds")
# SSP.460_data_table.rds
# folds_SSP.460_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/SSP.460_folds.rds")
# SSP.460_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/SSP.460_coordinates.rds")
# SSP.460_coordinates.rds <- NA
# # # #
# SSP.460 <- list("Dataset" = SSP.460_data_table.rds, "Folds" = folds_SSP.460_data_table.rds, "Coordinates" = SSP.460_coordinates.rds)
# usethis::use_data(SSP.460,overwrite = TRUE)
# usethis::use_r("data")
#
Overview_Datasets <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/Overview_table.rds")
usethis::use_data(Overview_Datasets,overwrite = TRUE)
usethis::use_r("data")
Overview_Datasets
ncol(BB.250)
BB.250
nrow(BB.250$Dataset)
ncol(BB.250$Dataset)
?BB.250
BB.250$Dataset
?SP.231
ncol(SP.231)
ncol(SP.231$Dataset)
nrow(SP.231$Dataset)
?B.204
ncol(B.204$Dataset)
nrow(B.204$Dataset)
B.204$Dataset
?G.150
nrow(G.150)
nrow(G.150$Dataset)
ncol(G.150$Dataset)
?H.138
ncol(H.138$Dataset)
nrow(H.138$Dataset)
?SL.125
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
#devtools::document()
library(devtools)
library(usethis)
library(roxygen2)
document()
document()
library(LimeSoDa)
detach("package:LimeSoDa", unload = TRUE)
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
#devtools::document()
library(devtools)
library(usethis)
library(roxygen2)
document()
devtools::document()
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
#devtools::document()
library(devtools)
library(usethis)
library(roxygen2)
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
##devtools::document()
library(devtools)
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
devtools::document()
devtools::document()
remove.packages("Lime.SoDa")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(LimeSoDa)
detach("package:LimeSoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(LimeSoDa)
detach("package:LimeSoDa", unload = TRUE)
remove.packages("LimeSoDa")
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(LimeSoDa)
Overview_Datasets
document()
devtools::document()
devtools::test()
usethis::use_testthat()
usethis::use_test()
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(LimeSoDa)
detach("package:LimeSoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/LimeSoDa_0.1.0.tar.gz", repos = NULL, type = "source")
