theme(legend.title = element_blank())+
scale_x_reverse()
## Load Reference Data
H.138_Ref <- read.csv(file = "H.138/H.138_Ref.csv",
header = T,sep = ",",dec = ".")
## Load feature data
# Load vis_NIR data
H.138_MIR <- read.csv(file = "H.138/Features/H.138_MIR.csv",
header = T,sep = ",",dec = ".")
H.138_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/H.138_data_table.rds")
H.138_data_table.rds
folds_H.138_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/H.138_folds.rds")
H.138_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/H.138_coordinates.rds")
H.138_coordinates.rds
# #
H.138 <- list("Dataset" = H.138_data_table.rds, "Folds" = folds_H.138_data_table.rds, "Coordinates" = H.138_coordinates.rds)
usethis::use_data(H.138,overwrite = TRUE)
usethis::use_r("data")
library(ggplot2)
library(tidyverse)
mir_data <- O.32$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
tt <- 10^(-tt)
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
NRW.115_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/NRW.115_data_table.rds")
NRW.115_data_table.rds
folds_NRW.115_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/NRW.115_folds.rds")
NRW.115_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/NRW.115_coordinates.rds")
NRW.115_coordinates.rds <- NA
# #
NRW.115 <- list("Dataset" = NRW.115_data_table.rds, "Folds" = folds_NRW.115_data_table.rds, "Coordinates" = NRW.115_coordinates.rds)
usethis::use_data(NRW.115,overwrite = TRUE)
usethis::use_r("data")
mir_data <- H.138$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
tt <- 10^(-tt)
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
mir_data <- H.138$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
mir_data <- NRW.115$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
NRW.62_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/NRW.62_data_table.rds")
NRW.62_data_table.rds
folds_NRW.62_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/NRW.62_folds.rds")
NRW.62_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/NRW.62_coordinates.rds")
NRW.62_coordinates.rds
NRW.62_coordinates.rds <- NA
# #
NRW.62 <- list("Dataset" = NRW.62_data_table.rds, "Folds" = folds_NRW.62_data_table.rds, "Coordinates" = NRW.62_coordinates.rds)
usethis::use_data(NRW.62,overwrite = TRUE)
usethis::use_r("data")
mir_data <- NRW.62$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
NRW.42_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/NRW.42_data_table.rds")
NRW.42_data_table.rds
folds_NRW.42_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/NRW.42_folds.rds")
NRW.42_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/NRW.42_coordinates.rds")
NRW.42_coordinates.rds
NRW.42_coordinates.rds <- NA
# #
NRW.42 <- list("Dataset" = NRW.42_data_table.rds, "Folds" = folds_NRW.42_data_table.rds, "Coordinates" = NRW.42_coordinates.rds)
usethis::use_data(NRW.42,overwrite = TRUE)
usethis::use_r("data")
mir_data <- NRW.42$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
O.32_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_files/O.32_data_table.rds")
O.32_data_table.rds
folds_O.32_data_table.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_split_files/O.32_folds.rds")
O.32_coordinates.rds <- readRDS("C:/Users/Jonas/Desktop/Benchmark_datasets/R/Benchmarks/R_script/Stored_dataset_coordinate_files/O.32_coordinates.rds")
O.32_coordinates.rds
O.32_coordinates.rds <- NA
# #
O.32 <- list("Dataset" = O.32_data_table.rds, "Folds" = folds_O.32_data_table.rds, "Coordinates" = O.32_coordinates.rds)
usethis::use_data(O.32,overwrite = TRUE)
usethis::use_r("data")
mir_data <- O.32$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
document()
devtools::document()
SSP.460
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(Lime.SoDa)
detach("package:Lime.SoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
?BB.250
?BB.250
library(Lime.SoDa)
?BB.250
?BB.250
library(Lime.SoDa)
library(Lime.SoDa)
?BB.250
?B.204
B.204
?SL.125
SL.125
detach("package:Lime.SoDa", unload = TRUE)
document()
devtools::document()
library(Lime.SoDa)
detach("package:Lime.SoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(Lime.SoDa)
detach("package:Lime.SoDa", unload = TRUE)
install.packages("C:/Users/Jonas/Desktop/Benchmark_datasets/Lime.SoDa_R_Package/Lime.SoDa_0.1.0.tar.gz", repos = NULL, type = "source")
library(Lime.SoDa)
detach("package:Lime.SoDa", unload = TRUE)
library(Lime.SoDa)
?SL.125
detach("package:Lime.SoDa", unload = TRUE)
library(Lime.SoDa)
?SL.125
nir_data <- SL.125$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
#Convert the row to a long format for ggplot2
library(ggplot2)
library(tidyverse)
nir_data <- SL.125$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
?UL.120
nir_data <- UL.120$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
NRW.115
?NRW.115
mir_data <- NRW.115$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
?SA.112
nir_data <- SA.112$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
?RP.62
nir_data <- RP.62$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
?G.104
G.104
?MGS.101
?CV.98
nir_data <- CV.98$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
?CV.98
cv:)()
CV.98
?SC.93
nir_data <- SC.93$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
?SC.93
?BB.72
?NRW.62
?BC.58
BC.58
mir_data <- NRW.62$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
?SSP.58
SSP.58
nir_data <- SSP.58$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
mir_data <- BC.58$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
mir_data <- BC.58$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
tt
tt
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
mir_data <- BC.58$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
?SSP.58
?NSW.52
?NSW.52
?BB.51
?W.50
?SC.50
PC.45
?MG.44
nir_data <- MG.44$Dataset
#select all columns where column name contains "wl_"
tt <- nir_data[, grepl("wl_", colnames(nir_data))]
colnames(tt) <- as.numeric(sub("wl_", "", colnames(tt)))
tt
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())
?NRW.42
mir_data <- NRW.42$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
?SM.40
?MWP.36
?O.32
mir_data <- =.32$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
mir_data <- O.32$Dataset
#select all columns where column name contains "wl_"
tt <- mir_data[, grepl("wn_", colnames(mir_data))]
tt
colnames(tt) <- as.numeric(sub("wn_", "", colnames(tt)))
long_data <- tt %>%
mutate(Spectrum = row_number()) %>%
pivot_longer(-Spectrum, names_to = "Wavelength", values_to = "Reflectance")
long_data
# Plot the spectrum for the selected row
ggplot(long_data, aes(x = as.numeric(Wavelength), y = Reflectance, group = Spectrum)) +
geom_line(alpha=0.1) +
labs(x = "Wavelength (nm)", y = "Reflectance", title = "Spectra Plot") +
theme_minimal() +
theme(legend.title = element_blank())+
scale_x_reverse()
?BB.30_1
document()
document()
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
#devtools::document()
library(devtools)
library(usethis)
library(roxygen2)
library(Lime.SoDa)
document()
test()
usethis::use_test()
devtools::check()
devtools::check()
#install.packages("remotes")
library(remotes)
install_github("JonasSchmidinger/Lime.SoDa",
build_vignettes = TRUE,
ref = "master",
auth_token = "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")
devtools::install_github("JonasSchmidinger/Lime.SoDa",
build_vignettes = TRUE,
auth_token = "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")
